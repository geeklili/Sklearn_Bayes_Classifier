天网英语：，是《魔鬼终结者》电影系列中挑战人类的人工智慧超级电脑，原本是一个由美国政府研发出来的国防电脑系统，未来的世界因电脑防卫系统「天网」产生自我智能，判定人类是威胁它们的物种，所以将其人类设定「毁灭」而发生核战12。
/ɡɪ/5， 音频帮助·信息是一个分散式版本控制软件，最初由林纳斯·托瓦兹创作，于2005年以释出。最初目的是为更好地管理内核开发而设计。应注意的是，这与6一个类似界面的文件管理器有所不同。最初的开发动力来自于和78。最初只是作为一个可以被其他前端比如或9包装的后端而开发的，但后来内核已经成熟到可以独立地用作版本控制10。很多著名的软件都使用进行版本控制11，其中包括内核、.服务器和内核等项目的开发流程12。
应用程序接口英语：，简称：，又称为应用编程接口，就是软件系统不同组成部分衔接的约定。由于近年来软件的规模日益庞大，常常需要把复杂的系统划分成小的组成部分，编程接口的设计十分重要。程序设计的实践中，编程接口的设计首先要使软件系统的职责得到合理划分。良好的接口设计可以降低系统各部分的相互依赖，提高组成单元的内聚性，降低组成单元间的耦合程度，从而提高系统的维护性和扩展性。
排版引擎，也称为浏览器内核、页面渲染引擎或样版引擎，它是一种软体元件，负责取得标记式内容如、及图像档案等等、整理资讯如及等，并将排版后的内容输出至显示器或印表机。所有网页浏览器、电子邮件客户端、电子阅读器以及其它需要根据表示性的标记语言来显示内容的应用程序都需要排版引擎。在将其排版引擎作为独立于浏览器的一个配件之后，「排版引擎」这个词汇才被广泛使用1。也就是说，除了浏览器，其它浏览器也可以使用作自己排版引擎。
实体英语：是有可区别性且内于其自身而独立存在的某种事物。但它不需是物理存在。尤其是抽象和法律拟制也通常被视为实体。实体可被看成是一包含有子集的集合。在哲学中，这种集合被称为客体。实体可被使用来指涉某个可能是人、动物、植物或真菌等不会思考的生命、无生命物体或信念等的事物。在这一方面，实体可以被视为一全包的词语。有时，实体被当做本质的广义，不论即指的是否为物质上的存在，如时常会指涉到的无物质形式的实体－语言。更有甚者，实体有时亦指存在或本质本身。在法律上，实体是指能具有权利和义务的事物。这通常是指法人，但也包括自然人。
面向对象查询英语：，缩写：，是一个轻量级的数据库映射类库。它实现了，同时面向“关系”和“对象”提供领域特定语言以构造查询语句。
氪4102,8,18,18物理性质物态固体密度接近室温12.023·−3熔点时液体密度10.38·−3熔点1828.05，1554.9°，2830.82°沸点3236，2963°，5365°熔化热16.74·−1汽化热362·−1比热容25.98·−1·−1蒸汽压&;3300压/110100110100温/172118972117239527533234原子性质氧化态0,+1,+2,+4,+6两性电负性2.20鲍林标度电离能第一：804.4·−1第二：1870·−1第三：3177·−1原子半径137共价半径139±6范德华半径163杂项晶体结构面心立方磁序顺磁性1电阻率20°105.4Ω·热导率71.8·−1·−1膨胀系数25°11.8µ·−1·−1声速细棒20°3070·−1杨氏模量121剪切模量44体积模量180泊松比0.39莫氏硬度4.75维氏硬度461布氏硬度37.3号7440-05-3最稳定同位素主条目：钯的同位素同位素丰度半衰期(1/2)衰变方式能量产物1003.63ε-100γ0.084,0.074,0.126-1021.02%稳定，带56个中子10316.991ε-10310411.14%稳定，带58个中子10522.33%稳定，带59个中子10627.33%稳定，带60个中子1076.5×106β−0.03310710826.46%稳定，带62个中子11011.72%&;6×1017β−β−1.9997110钯2是一种化学元素，化学符号为，原子序数46。钯的拉丁名称是以小行星智神星来命名的，另一种以小行星来命名的元素是铈。钯是一种罕见的、有光泽的银白色金属，钯与铂、铑、钌、铱、锇形成一组铂族金属的元素家族。铂族金属化学性质相似，但钯的熔点最低，是这些贵金属中密度最低的一种。在实验室里，经常把一氧化碳通入稀氯化钯溶液中来制取钯：2++2=↓+2+2(){\_{2}++_{2}=\+_{2}+2()}钯是一种过渡金属，性质像铂，可在铜及镍的矿石中提炼。它主要用作工业上的催化剂钯催化偶联反应、内燃机车辆的触媒转换器及白金首饰，另外，它可以吸收比自身体积大900倍的氢气。
密码学英语：可分为古典密码学和现代密码学。在西方语文中，密码学一词源于希腊语ó“隐藏的”，和á“书写”。古典密码学主要关注信息的保密书写和传递，以及与其相对应的破译方法。而现代密码学不只关注信息保密问题，还同时涉及信息完整性验证消息验证码、信息发布的不可抵赖性数字签名、以及在分布式计算中产生的来源于内部和外部的攻击的所有信息安全问题。古典密码学与现代密码学的重要区别在于，古典密码学的编码和破译通常依赖于设计者和敌手的创造力与技巧，作为一种实用性艺术存在，并没有对于密码学原件的清晰定义。而现代密码学则起源于20世纪末出现的大量相关理论，这些理论使得现代密码学成为了一种可以系统而严格地学习的科学。密码学是数学和计算机科学的分支，同时其原理大量涉及信息论。著名的密码学者罗纳德·李维斯特解释道：「密码学是关于如何在敌人存在的环境中通讯」，自工程学的角度，这相当于密码学与纯数学的差异。密码学的发展促进了计算机科学，特别是在于电脑与网路安全所使用的技术，如存取控制与资讯的机密性。密码学已被应用在日常生活：包括自动柜员机的晶片卡、电脑使用者存取密码、电子商务等等。
抽象资料型别，是计算机科学中具有类似行为的特定类别的数据结构的数学模型；或者具有类似语义的一种或多种程序设计语言的数据类型。抽象数据类型是间接定义的，通过其上的可执行的操作以及这些操作的效果的数学约束与可能的代价。例如，抽象的堆叠由3个操作定义：推入，弹出接受约束：每次弹出返回的是最新被推入且没有被弹出的数据，也就是后进先出，查看堆叠顶端数据。当分析使用堆叠演算法的效率，所有这3个操作用时相同，无论堆叠中包含多少项数据；并且对每项数据栈使用了常量大小的存储。抽象数据类型是纯粹理论实体，用于简化描述抽象算法，分类与评价数据结构，形式描述程序设计语言的类型系统。一个可以用特定数据类型或数据结构实现，在许多程序设计语言中有许多种实现方式；或者用形式规范语言描述。常实现为模块：模块的接口声明了对应于操作的例程，有时用注释描述了约束。
敏捷软件开发英语：，又称敏捷开发，是一种从1990年代开始逐渐引起广泛关注的一些新型软件开发方法，是一种应对快速变化的需求的一种软件开发能力。它们的具体名称、理念、过程、术语都不尽相同，相对于「非敏捷」，更强调程序员团队与业务专家之间的紧密协作、面对面的沟通认为比书面的文档更有效、频繁交付新的软件版本、紧凑而自我组织型的团队、能够很好地适应需求变化的代码编写和团队组织方法，也更注重软件开发过程中人的作用。敏捷软体开发或称快速程式开发描述了一套软件开发的价值和原则，在这些开发中，需求和解决方案皆通过自组织跨功能团队达成1。敏捷软体开发主张适度的计划、进化开发、提前交付与持续改进，并且鼓励快速与灵活的面对开发与变更。这些原则支援许多软件开发方法的定义和持续进化。「敏捷」或2一词由「敏捷软件开发宣言」中开始推广，「敏捷软件开发宣言」定义了相关的价值和原则。敏捷软体开发的框架不断的发展，两个最广泛被使用的是与。
在计算机科学中，是一个常见的指令，它能够将某个指令的标准输出，导向、存入某个档案中。许多不同的命令行界面都提供这个功能，如、。的功能通常是用管道，让它不但能在萤幕输出，而且也能够将它储存在档案中。当一个资料在被另一个指令或程式改变之前的中间输出，也能够用来捕捉它。命令能够读取标准输入，之后将它的内容写入到标准输出，同时将它的副本写入特定的档案或变数中。

