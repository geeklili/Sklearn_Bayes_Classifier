是一套跨平台的文字编辑器，支持基于的外挂程式。是专有软体，可透过套件扩充功能。大多数的套件使用自由软体授权释出，并由社群建置维护。
是核心子系统之一，做为档案系统的附加功能，它可监控档案系统并将异动通知应用程式。本系统的出现取代了旧有核心里，拥有类似功能之模组。的原始开发者为、罗伯特·拉姆与。于核心2.6.13发行时(2005年六月十八日)，被正式纳入核心1。尽管如此，它仍可透过修补程式的方式与2.6.12甚至更早期的核心整合。的主要应用于桌面搜索软体，像：，得以针对有变动的档案重新索引，而不必没有效率地每隔几分钟就要扫描整个档案系统。相较于主动轮询档案系统，透过作业系统主动告知档案异动的方式，让等软体甚至可以在档案更动后一秒内更新索引。此外，诸如：更新目录检视、重新载入设定档、追踪变更、备份、同步甚至上传等许多自动化作业流程，都可因而受惠。
无国界医生法语：éè，发音ɛɛ̃ɑ̃ʁɔ̃ɛʁ帮助·关于，英语：，简称：，是一个独立的、从事人道救援的非政府组织，以在饱受战争摧残的地区和贫穷国家致力协助抵抗地方疾病的计划闻名。1
 是编程语言及其数值数学扩展包 的可视化操作界面。它为利用通用的图形用户界面工具包，如,,或+向应用程序嵌入式绘图提供了应用程序接口。此外，还有一个基于图像处理库如开放图形库的接口，其设计与非常类似--尽管并不怎么好用。就是用进行图形绘制。最初由.撰写，它拥有一个活跃的开发社区，并且根据样式许可证分发。在.2012年去世前不久，迈克尔被提名为的主要开发者。截至到2015年10月30日，1.5.支持2.7到3.5版本。1.2是的第一个版本，支持3..1.4是支持2.6的最后一个版本。2
蓝牙英语：。这是一种无线通讯技术标准，用来让固定与行动装置，在短距离间交换资料，以形成个人区域网络。其使用短波特高频无线电波，经由2.4至2.485的频段来进行通信1。1994年由电信商爱立信发展出这个技术2。它最初的设计，是希望建立一个-232数据线的无线通讯替代版本。它能够连结多个装置，克服同步的问题。蓝牙技术目前由蓝牙技术联盟来负责维护其技术标准，其成员已超过三万3，分布在电信、电脑、网路与消费性电子产品等领域4。曾经将蓝牙技术标准化为802.15.1，但是这个标准已经不再继续使用。
中文译名：缤趣，是一个网路与手机的应用程式，可以让使用者利用其平台作为个人创意及专案工作所需的视觉探索工具，同时也有人把它视为一个图片分享类的社交网站，用户可以按主题分类添加和管理自己的图片收藏，并与好友分享。其使用的网站布局为瀑布流布局-。由美国加州帕罗奥图的一个名为的团队营运，创办人为、及。2010年正式上线。「」是由「」及「」两个字组成3，在社群网站中的浏览量仅次于、、以及。2017年3月9日，在中国大陆被关键字屏蔽，客户端从软件商店下架。官方没有说明任何原因。和一样，虽然在中国大陆用户不多，但在香港和台湾则有不少忠实的用户，这两个网站是在同一年被屏蔽。
软体测试英语：，描述一种用来促进鉴定软体的正确性、完整性、安全性和品质的过程。据此，您可能会想，软体测试永远不可能完整的确立任意电脑软体的正确性。然而，在可计算理论计算机科学的一个支派一个简单的数学证明推断出下列结果：不可能完全解决所谓「当机」，指任意电脑程式是否会进入无穷回圈，或者罢工并产生输出问题。换句话说，软体测试是一种实际输出与预期输出间的稽核或者比较过程。软件测试的经典定义是：在规定的条件下对程序进行操作，以发现程序错误，衡量软体品质，并对其是否能满足设计要求进行评估的过程。软体测试有许多方法，但对复杂的产品执行有效测试不仅仅是研究过程，更是创造并严格遵守某些呆板步骤的大事。测试的其中一个定义：为了评估而质疑产品的过程；这里的“质疑”是测试员试著对产品做的事，而产品以测试者脚本行为反应作为回答。虽然大部分测试的智力过程不外乎回顾、检查，然而「测试」这个词意味著产品动态分析──让产品流畅运行。程式品质可能，而且通常会，随系统不同而有差异；不过某些公认特性是共通的：可靠性、稳定性、轻便性、易于维护、以及实用性。请参照至标准9126有更详尽的说明。
概率模型，也称为是用来描述不同随机变量之间关系的数学模型，通常情况下刻画了一个或多个随机变量之间的相互非确定性的概率关系。从数学上讲，该模型通常被表达为(,){\(,)}，其中{\}是观测集合用来描述可能的观测结果，{\}是{\}对应的概率分布函数集合。若使用概率模型，一般而言需假设存在一个确定的分布{\}生成观测数据{\}。因此通常使用统计推断的办法确定集合{\}中谁是数据产生的原因。大多数统计检验都可以被理解为一种概率模型。例如，一个比较两组数据均值的学生检验可以被认为是对该概率模型参数是否为0的检测。此外，检验与模型的另一个共同点则是两者都需要提出假设并且误差在模型中常被假设为正态分布。
，是英文""自适应增强的缩写，是一种机器学习方法，由和提出。1方法的自适应在于：前一个分类器分错的样本会被用来训练下一个分类器。方法对于噪声数据和异常数据很敏感。但在一些问题中，方法相对于大多数其它学习算法而言，不会很容易出现过拟合现象。方法中使用的分类器可能很弱比如出现很大错误率，但只要它的分类效果比随机好一点比如两类问题分类错误率略小于0.5，就能够改善最终得到的模型。而错误率高于随机分类器的弱分类器也是有用的，因为在最终得到的多个分类器的线性组合中，可以给它们赋予负系数，同样也能提升分类效果。方法是一种迭代算法，在每一轮中加入一个新的弱分类器，直到达到某个预定的足够小的错误率。每一个训练样本都被赋予一个权重，表明它被某个分类器选入训练集的概率。如果某个样本点已经被准确地分类，那么在构造下一个训练集中，它被选中的概率就被降低；相反，如果某个样本点没有被准确地分类，那么它的权重就得到提高。通过这样的方式，方法能“聚焦于”那些较难分更富信息的样本上。在具体实现上，最初令每个样本的权重都相等，对于第次迭代操作，我们就根据这些权重来选取样本点，进而训练分类器。然后就根据这个分类器，来提高被它分错的的样本的权重，并降低被正确分类的样本权重。然后，权重更新过的样本集被用于训练下一个分类器2。整个训练过程如此迭代地进行下去。
行程英语：，是电脑中已执行程式的实体。行程为曾经是分时系统的基本运作单位。在面向进程设计的系统如早期的，2.4及更早的版本中，进程是程序的基本执行实体；在面向线程设计的系统如当代多数操作系统、2.6及更新的版本中，行程本身不是基本执行单位，而是执行绪的容器。程式本身只是指令、数据及其组织形式的描述，行程才是程式那些指令和数据的真正执行实例。若干行程有可能与同一个程式相关联，且每个行程皆可以同步循序或异步平行的方式独立执行。现代电脑系统可在同一段时间内以进程的形式将多个程式载入到记忆体中，并借由时间共享或称时分复用，以在一个处理器上表现出同时平行性执行的感觉。同样的，使用多执行绪技术多执行绪即每一个执行绪都代表一个行程内的一个独立执行上下文的作业系统或电脑架构，同样程式的平行线程，可在多主机或网络上真正同时执行在不同的上。
路由协定英语：是一种指定封包转送方式的网路协定。网络的主要节点设备是路由器，路由器通过路由表来转发接收到的数据。转发策略可以是人工指定的通过静态路由、策略路由等方法。在具有较小规模的网络中，人工指定转发策略没有任何问题。但是在具有较大规模的网络中如跨国企业网络、网络，如果通过人工指定转发策略，将会给网络管理员带来巨大的工作量，并且在管理、维护路由表上也变得十分困难。为了解决这个问题，动态路由协议应运而生。动态路由协议可以让路由器自动学习到其他路由器的网络，并且网络拓扑发生改变后自动更新路由表。网络管理员只需要配置动态路由协议即可，相比人工指定转发策略，工作量大大减少。

